---
title: "Creating and Using Relational Databases"
author: "Aaron Wenger"
date: "2023-05-13"
categories: ["learning R"] ["data science"] ["tutorial"]
---

## Introduction to Relational Databases

- tidy data and its importance
- the "relational model" for data management
  - "is an approach to managing data using a structure and language consistent with first-order predicate logic, first described in 1969 by English computer scientist Edgar F. Codd" [Relationl Model, Wikipedia](https://en.wikipedia.org/wiki/Relational_model)
  - data is organized into separate tables which are related by key values
  - alternative models exist and all this is very complicated
- relational (but still tidy) data 
  - tidyverse's `dplyr` has "two table verbs" which allow relational operations
- an example using data on Michigan K-12 public schools from MI School Data

## Introduction to Dataset

- source [MI School Data](https://www.mischooldata.org/k-12-data-files/)
- tables
- variables 
- abbreviations

  
## Example

```{r}
library(tidyverse)
library(here)
library(readr)

filepath <- here("posts", "learning_relational_databases", "data", "23-05_School-District-Info_MiSchoolData.csv")
mischool_sch_dst <- read_csv(filepath, show_col_types = FALSE)
```

```{r}
mischool_sch_dst_0 <- mischool_sch_dst |> 
  filter(Status == "Open-Active") |> 
  select(
    isd_code = ISDCode,
    isd_name = ISDName,
    dst_code = DistrictCode,
    dst_name = DistrictName,
    sch_code = BuildingCode,
    sch_name = BuildingName,
    sch_type = SCHOOL_EMPHASIS,
    sch_level = SCHOOL_LEVEL,
    sch_category = EntityType,
    add_street = ADDRESS_LINE_1,
    add_city = CITY,
    add_county = COUNTY_NAME,
    add_zip = ZIP_CODE
  ) |>
  distinct()
```

### Keys
```{r}
mischool_sch_dst_0 |> count(isd_code) |> filter(n > 1)
mischool_sch_dst_0 |> count(dst_code) |> filter(n > 1)
mischool_sch_dst_0 |> count(sch_code) |> filter(n > 1)
```

```{r}
mischool_sch_dst_0 |> count(isd_code, dst_code, sch_code) |> filter(n > 1)
```

### Creating ISD, District, and School Tables
```{r}
mischool_database_sch <- mischool_sch_dst_0 |> 
  filter(sch_code != "00000")

mischool_database_dst <- mischool_sch_dst_0 |> 
  filter(!str_detect(dst_code, "000$") & sch_code == "00000")

mischool_database_isd <- mischool_sch_dst_0 |>
  filter(str_detect(dst_code, "000$") & sch_code == "00000") |> 
  select(
    isd_code,
    isd_name,
    dst_code,
    sch_code,
    sch_category,
    add_county
  )
```

### Adding MiSTEM Region
```{r}
filepath <- here("posts", "learning_relational_databases", "data", "23-05-17_MiS_Region-ISD-Directory.csv")
region_isd <- read_csv(filepath, show_col_types = FALSE)

mischool_database_isd_1 <- mischool_database_isd |> 
  left_join(
    region_isd |> select(included_isd_code, region_code), 
    join_by(isd_code == included_isd_code)
  ) |> 
  mutate(
    region_code = str_pad(region_code, width = 2, side = "left", pad = "0")
  )
```

### Adding Student Count Information
```{r}
filepath <- here("posts", "learning_relational_databases", "data", "23-05_Student-Counts_MiSchoolData.csv")
mischool_std_count <- read_csv(filepath, show_col_types = FALSE)

mischool_std_count_0 <- mischool_std_count |> 
  select(
    isd_code = ISDCode,
    # isd_name = ISDName,
    dst_code = DistrictCode,
    # dst_name = DistrictName,
    sch_code = BuildingCode,
    sch_name = BuildingName,
    # entity_type2_name = EntityType,
    # county_name = CountyName,
    stdcount_total = TOTAL_ENROLLMENT,
    stdcount_male = MALE_ENROLLMENT,
    stdcount_female = FEMALE_ENROLLMENT,
    stdcount_eth_ntv = AMERICAN_INDIAN_ENROLLMENT,
    stdcount_eth_asn = ASIAN_ENROLLMENT,
    stdcount_eth_blk = AFRICAN_AMERICAN_ENROLLMENT,
    stdcount_eth_ltn = HISPANIC_ENROLLMENT,
    stdcount_eth_haw = HAWAIIAN_ENROLLMENT,
    stdcount_eth_wht = WHITE_ENROLLMENT,
    stdcount_eth_mxd = TWO_OR_MORE_RACES_ENROLLMENT,
    stdcount_grd_middlecollege = EARLY_MIDDLE_COLLEGE_ENROLLMENT,
    stdcount_grd_prk = PREKINDERGARTEN_ENROLLMENT,
    stdcount_grd_k = KINDERGARTEN_ENROLLMENT,
    stdcount_grd_1 = GRADE_1_ENROLLMENT,
    stdcount_grd_2 = GRADE_2_ENROLLMENT,
    stdcount_grd_3 = GRADE_3_ENROLLMENT,
    stdcount_grd_4 = GRADE_4_ENROLLMENT,
    stdcount_grd_5 = GRADE_5_ENROLLMENT,
    stdcount_grd_6 = GRADE_6_ENROLLMENT,
    stdcount_grd_7 = GRADE_7_ENROLLMENT,
    stdcount_grd_8 = GRADE_8_ENROLLMENT,
    stdcount_grd_9 = GRADE_9_ENROLLMENT,
    stdcount_grd_10 = GRADE_10_ENROLLMENT,
    stdcount_grd_11 = GRADE_11_ENROLLMENT,
    stdcount_grd_12 = GRADE_12_ENROLLMENT,
    stdcount_grd_ungraded = UNGRADED_ENROLLMENT,
    stdcount_ecn_disadvantaged = ECONOMIC_DISADVANTAGED_ENROLLMENT,
    stdcount_special_ed = SPECIAL_EDUCATION_ENROLLMENT,
    stdcount_ell = ENGLISH_LANGUAGE_LEARNERS_ENROLLMENT
  ) 

mischool_std_count_0 |> count(isd_code) |> filter(n > 1)
mischool_std_count_0 |> count(dst_code) |> filter(n > 1)
mischool_std_count_0 |> count(sch_code) |> filter(n > 1)
mischool_std_count_0 |> count(isd_code, dst_code, sch_code) |> filter(n > 1)
```

```{r}
mischool_std_count_sch <- mischool_std_count_0 |> 
  filter(sch_name != "All Buildings") |> 
  mutate(
    prop_ecn_disadvantaged = 
      as.numeric(stdcount_ecn_disadvantaged) / stdcount_total,
    status_title1_15 = if_else(prop_ecn_disadvantaged >= 0.15, 1, 0),
    status_title1_40 = if_else(prop_ecn_disadvantaged >= 0.40, 1, 0),
    prop_eth_min = (stdcount_total - stdcount_eth_wht) / stdcount_total,
    status_majority_minority = if_else(prop_eth_min >= 0.5, 1, 0)
  )

mischool_database_sch_1 <- mischool_database_sch |> 
  left_join(
    mischool_std_count_sch |> 
      select(
        isd_code:sch_code, 
        stdcount_total, 
        prop_ecn_disadvantaged:status_majority_minority
      )
  )
```

```{r}
filepath <- here("posts", "learning_relational_databases", "data", "23-05-17_MiS_SchDatabase_Sch.csv")

write_csv(mischool_database_sch_1, filepath)
```

### Summary of CatA Data
```{r}
library(readxl)

filepath <- here("posts", "learning_relational_databases", "data", "MiSdata.xlsx")
dat <- read_excel(filepath, na = c("na", "NA", "n/a", "N/A")) |> 
  select(
    region, 
    target_aud_mod, 
    aud_oth,
    n_participants, 
    acfunded,
    non_acfunded_prop,
    n_participants_for_urg,
    n_type_stu,
    n_type_tch,
    n_type_oth,
    event_urg, 
    prop_urg,
    n_dem_blk,
    n_dem_ltn,
    n_dem_asn,
    n_dem_ntv,
    n_dem_fem,
    n_dem_ecn,
    n_dem_oth,
    data_any_urg,
    sch_participants,
    data_sch_incomplete
  ) |> 
  mutate(
    # recoding, reclassing, and adjusting for AC funding
    event_urg = if_else(event_urg == "Yes", 1, 0),
    prop_urg = as.numeric(prop_urg),
    n_participants = 
      round(as.integer(n_participants) * non_acfunded_prop),    
    n_participants_for_urg = 
      round(as.integer(n_participants_for_urg) * non_acfunded_prop),
    n_type_stu = round(n_type_stu * non_acfunded_prop),
    n_type_tch = round(n_type_tch * non_acfunded_prop),
    n_type_oth = round(n_type_oth * non_acfunded_prop),
    n_dem_blk = round(n_dem_blk * non_acfunded_prop),
    n_dem_ltn = round(n_dem_ltn * non_acfunded_prop),
    n_dem_asn = round(n_dem_asn * non_acfunded_prop),
    n_dem_ntv = round(n_dem_ntv * non_acfunded_prop),
    n_dem_fem = round(n_dem_fem * non_acfunded_prop),
    n_dem_ecn = round(n_dem_ecn * non_acfunded_prop),
    n_dem_oth = round(n_dem_oth * non_acfunded_prop),
    data_useful_urg = 
      if_else(!is.na(n_dem_blk | n_dem_ltn | n_dem_asn | n_dem_ntv | n_dem_fem | n_dem_ecn | n_dem_oth), 1, NA),
    # new variables
    id = row_number(),
    n_participants_URG = round(n_participants * (prop_urg / 100)),
    n_participants_nonURG = 
      n_participants - round(n_participants * (prop_urg / 100)),
    #!!! change to str_detect, unless there is a good reason not to and see if 
    # the aud_other variable can be generated from target_aud_mod
    aud_stu = if_else(
      grepl("K-12 Students", target_aud_mod, fixed = TRUE), 1, 0
    ),
    aud_tch = if_else(
      grepl("K-12 In-Service", target_aud_mod, fixed = TRUE), 1, 0
    )
  ) |> 
  select(!target_aud_mod, !non_acfunded_prop, !acfunded)

```

```{r}
dat_entity <- dat |> 
  select(sch_participants) |> 
  separate_longer_delim(sch_participants, ",") |> 
  mutate(
    isd_code = str_extract(sch_participants, "^")
    dst_code =
    sch_code =
    type_dst = if_else(str_detect(sch_participants, "-0000"), 1, 0),
    type_sch = if_else(str_detect(sch_participants, "-0000"), 0, 1)
  )
```

```{r}
filter(mischool_database_sch_1, mischool_database_sch_1$isd_code != str_extract(mischool_database_sch_1$dst_code, "^\\d{2}"))


sum(mischool_database_sch_1$isd_code != str_extract(mischool_database_sch_1$dst_code, "^\\d{2}"))
```
